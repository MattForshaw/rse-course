
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARROW ELEMENT LBRACE NEWLINE NUMBER PLUS RBRACE SUBSCRIPT TEXNEWLINEsystem : equationsystem : system TEXNEWLINE NEWLINE equationequation : side ARROW sideside : moleculesmolecules : moleculemolecules : NUMBER moleculeside : side PLUS moleculesmolecule : countedelementcountedelement : ELEMENTcountedelement : ELEMENT atomcountmolecule : molecule countedelementatomcount : SUBSCRIPT NUMBERatomcount : SUBSCRIPT LBRACE NUMBER RBRACE'
    
_lr_action_items = {'NUMBER':([0,10,11,15,16,20,],[6,6,6,19,6,22,]),'ELEMENT':([0,5,6,7,8,10,11,12,13,14,16,19,23,],[8,8,8,-8,-9,8,8,-11,8,-10,8,-12,-13,]),'$end':([1,2,4,5,7,8,12,13,14,17,18,19,21,23,],[0,-1,-4,-5,-8,-9,-11,-6,-10,-3,-7,-12,-2,-13,]),'TEXNEWLINE':([1,2,4,5,7,8,12,13,14,17,18,19,21,23,],[9,-1,-4,-5,-8,-9,-11,-6,-10,-3,-7,-12,-2,-13,]),'ARROW':([3,4,5,7,8,12,13,14,18,19,23,],[10,-4,-5,-8,-9,-11,-6,-10,-7,-12,-13,]),'PLUS':([3,4,5,7,8,12,13,14,17,18,19,23,],[11,-4,-5,-8,-9,-11,-6,-10,11,-7,-12,-13,]),'SUBSCRIPT':([8,],[15,]),'NEWLINE':([9,],[16,]),'LBRACE':([15,],[20,]),'RBRACE':([22,],[23,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'system':([0,],[1,]),'equation':([0,16,],[2,21,]),'side':([0,10,16,],[3,17,3,]),'molecules':([0,10,11,16,],[4,4,18,4,]),'molecule':([0,6,10,11,16,],[5,13,5,5,5,]),'countedelement':([0,5,6,10,11,13,16,],[7,12,7,7,7,12,7,]),'atomcount':([8,],[14,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> system","S'",1,None,None,None),
  ('system -> equation','system',1,'p_expression_system','parsereactions.py',13),
  ('system -> system TEXNEWLINE NEWLINE equation','system',4,'p_expression_combine_system','parsereactions.py',19),
  ('equation -> side ARROW side','equation',3,'p_equation','parsereactions.py',25),
  ('side -> molecules','side',1,'p_side','parsereactions.py',32),
  ('molecules -> molecule','molecules',1,'p_molecules','parsereactions.py',38),
  ('molecules -> NUMBER molecule','molecules',2,'p_stoichiometry','parsereactions.py',43),
  ('side -> side PLUS molecules','side',3,'p_plus','parsereactions.py',48),
  ('molecule -> countedelement','molecule',1,'p_molecule','parsereactions.py',54),
  ('countedelement -> ELEMENT','countedelement',1,'p_countedelement','parsereactions.py',60),
  ('countedelement -> ELEMENT atomcount','countedelement',2,'p_ncountedelement','parsereactions.py',65),
  ('molecule -> molecule countedelement','molecule',2,'p_multi_element','parsereactions.py',70),
  ('atomcount -> SUBSCRIPT NUMBER','atomcount',2,'p_multi_atoms','parsereactions.py',76),
  ('atomcount -> SUBSCRIPT LBRACE NUMBER RBRACE','atomcount',4,'p_many_atoms','parsereactions.py',81),
]
